class UploadFailed extends HTMLElement {
  id = "talentics-icon-" + (Math.random() + 1).toString(36).substring(5);
  props = ['size', 'color']
  contentStyle = '';
  colorStyle = '';
  size = ''
  color = ''
  constructor() {
    super()
    this._initElement()
    const shadowRoot = this.attachShadow({mode: 'closed'});
    shadowRoot.innerHTML = `<svg style="${this.contentStyle}" width="240" height="180" viewBox="0 0 240 180" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M36.0895 169.298C13.3395 169.298 -2.0105 137.868 12.9295 111.428C26.8595 86.7781 45.4495 89.9081 75.3595 61.2081C111.67 26.3681 137.159 24.4581 169.559 39.6881C187.879 48.2981 190.87 83.6881 220.02 105.688C246.3 125.518 224.879 159.248 211.049 164.518C197.219 169.778 187.869 169.778 187.869 169.778L36.0895 169.298Z" fill="#CFD3FF"/>
<path d="M202.789 60.1C216.348 60.1 227.339 49.1086 227.339 35.55C227.339 21.9914 216.348 11 202.789 11C189.231 11 178.239 21.9914 178.239 35.55C178.239 49.1086 189.231 60.1 202.789 60.1Z" fill="#CFD3FF"/>
<path d="M206.449 34.1914H40.1094V122.211H206.449V34.1914Z" fill="#FDF2F8"/>
<path opacity="0.2" d="M206.439 40.1328H89.9795L177.679 122.223H206.439V40.1328Z" fill="white"/>
<path d="M149.199 164.55H97.0391L104.369 128.57H141.869L149.199 164.55Z" fill="#7D5BCA"/>
<path opacity="0.3" d="M145.269 144.993H100.969L104.369 128.562H141.869L145.269 144.993Z" fill="#DBC8F9"/>
<path d="M167.829 169.779H78.4092C78.4092 165.269 82.0492 161.609 86.5492 161.609H159.699C164.189 161.609 167.829 165.269 167.829 169.779Z" fill="#3D00C3"/>
<path d="M204.249 25.9609H41.9892C38.2392 25.9609 35.1992 29.0109 35.1992 32.7809V134.481C35.1992 138.241 38.2392 141.301 41.9892 141.301H204.239C207.999 141.301 211.039 138.251 211.039 134.481V32.7709C211.039 29.0109 207.999 25.9609 204.249 25.9609ZM206.289 122.211H39.9492V34.1909H206.289V122.211V122.211Z" fill="#2F00A7"/>
<path d="M206.439 34.1914H39.9492V40.1214H206.439V34.1914Z" fill="#DBC8F9"/>
<path d="M123.119 135.451C125.159 135.451 126.809 133.791 126.809 131.741C126.809 129.691 125.159 128.031 123.119 128.031C121.079 128.031 119.419 129.691 119.419 131.741C119.429 133.791 121.079 135.451 123.119 135.451Z" fill="#F9F5FE"/>
<path d="M189.85 123.068C184.63 124.398 182.81 126.218 181.48 131.438C181.26 132.308 180 132.308 179.77 131.438C178.44 126.218 176.62 124.398 171.4 123.068C170.53 122.848 170.53 121.588 171.4 121.358C176.62 120.028 178.44 118.208 179.77 112.988C179.99 112.118 181.25 112.118 181.48 112.988C182.81 118.208 184.63 120.028 189.85 121.358C190.73 121.578 190.73 122.838 189.85 123.068Z" fill="#FFC401"/>
<path d="M202.34 107.541C198.77 108.451 197.53 109.701 196.61 113.271C196.46 113.871 195.6 113.871 195.44 113.271C194.53 109.701 193.28 108.461 189.71 107.541C189.11 107.391 189.11 106.531 189.71 106.371C193.28 105.461 194.52 104.211 195.44 100.641C195.59 100.041 196.45 100.041 196.61 100.641C197.52 104.211 198.77 105.451 202.34 106.371C202.94 106.531 202.94 107.391 202.34 107.541Z" fill="#FFC401"/>
<path d="M170.639 47.0505C169.419 47.0505 168.219 47.1705 167.059 47.3805C166.199 28.9305 150.979 14.2305 132.309 14.2305C116.939 14.2305 103.899 24.2005 99.2995 38.0305C97.2195 37.2905 94.9895 36.8905 92.6595 36.8905C81.6895 36.8905 72.7895 45.7905 72.7895 56.7605C72.7895 58.0905 72.9195 59.4005 73.1695 60.6605C71.8895 60.2505 70.5295 60.0305 69.1095 60.0305C61.7195 60.0305 55.7295 66.0205 55.7295 73.4105C55.7295 80.8005 61.7195 86.7905 69.1095 86.7905H170.63C181.6 86.7905 190.499 77.8905 190.499 66.9205C190.509 55.9405 181.609 47.0505 170.639 47.0505Z" fill="#BD54AE"/>
<path d="M97.6996 74.9092C99.4596 76.6692 102.33 76.6792 104.09 74.9092L118.59 60.4092V98.1492C118.59 100.649 120.61 102.669 123.11 102.669C125.61 102.669 127.63 100.649 127.63 98.1492V60.3992L142.13 74.8992C143.9 76.6592 146.76 76.6592 148.52 74.8992C150.29 73.1292 150.29 70.2692 148.52 68.4992L126.3 46.2792L126.29 46.2692C126.19 46.1692 126.08 46.0692 125.97 45.9792C125.94 45.9492 125.9 45.9292 125.87 45.9092C125.79 45.8392 125.7 45.7792 125.61 45.7192C125.58 45.6992 125.55 45.6892 125.52 45.6692C125.42 45.6092 125.33 45.5492 125.23 45.4892C125.21 45.4792 125.18 45.4692 125.16 45.4592C125.05 45.3992 124.94 45.3492 124.83 45.2992C124.82 45.2892 124.8 45.2892 124.79 45.2792C124.67 45.2292 124.54 45.1892 124.42 45.1492C124.4 45.1492 124.39 45.1392 124.37 45.1392C124.24 45.0992 124.12 45.0692 123.99 45.0392C123.95 45.0292 123.92 45.0292 123.88 45.0192C123.77 44.9992 123.66 44.9792 123.55 44.9692C123.4 44.9592 123.25 44.9492 123.1 44.9492C122.95 44.9492 122.8 44.9592 122.65 44.9692C122.54 44.9792 122.43 44.9992 122.32 45.0192C122.28 45.0292 122.25 45.0292 122.21 45.0392C122.08 45.0692 121.95 45.0992 121.82 45.1392C121.81 45.1392 121.79 45.1492 121.78 45.1492C121.65 45.1892 121.53 45.2392 121.4 45.2892C121.39 45.2892 121.38 45.2992 121.36 45.2992C121.24 45.3492 121.13 45.3992 121.02 45.4592C121 45.4692 120.98 45.4792 120.96 45.4892C120.86 45.5492 120.76 45.6092 120.66 45.6692C120.63 45.6892 120.61 45.6992 120.58 45.7192C120.49 45.7792 120.4 45.8492 120.31 45.9192C120.28 45.9392 120.25 45.9592 120.22 45.9792C120.11 46.0692 120 46.1692 119.89 46.2792L97.6996 68.5092C95.9296 70.2792 95.9296 73.1392 97.6996 74.9092Z" fill="#FFC401"/>
<path d="M45.8297 156.96C61.5146 156.96 74.2297 144.245 74.2297 128.56C74.2297 112.875 61.5146 100.16 45.8297 100.16C30.1448 100.16 17.4297 112.875 17.4297 128.56C17.4297 144.245 30.1448 156.96 45.8297 156.96Z" fill="#FF3938"/>
<path d="M60.1994 114.189C62.0294 116.019 62.0294 118.989 60.1994 120.829L38.0994 142.929C36.2694 144.759 33.2894 144.759 31.4594 142.929C29.6294 141.099 29.6294 138.129 31.4594 136.289L53.5594 114.189C55.3994 112.359 58.3694 112.359 60.1994 114.189Z" fill="white"/>
<path d="M38.0994 114.189L60.1994 136.289C62.0294 138.129 62.0294 141.099 60.1994 142.929C58.3694 144.759 55.3994 144.759 53.5594 142.929L31.4594 120.829C29.6294 118.999 29.6294 116.029 31.4594 114.189C33.2894 112.359 36.2594 112.359 38.0994 114.189Z" fill="white"/>
</svg>
`
  }

  attributeChangedCallback(name: string, _: string, newValue: string) {
    this._setState();
  }

  connectedCallback() {
    this._setState();
  }
  
  disconnectedCallback() {
    this._setState();
  }

  _initElement() {
    this._setState()
    const size = this.size || 24
    let contentStyle = `object-fit: content; width: ${size}; height: ${size}`
    this.contentStyle = contentStyle
    if (this.color) this.colorStyle = `fill: ${this.color}`
  }

  _setState() {
    // @ts-ignore
    this.props.forEach(key => this[key as keyof typeof UploadFailed] = this.getAttribute(key));
  }
}
export default UploadFailed