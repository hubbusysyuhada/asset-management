class AiPowered extends HTMLElement {
  id = "talentics-icon-" + (Math.random() + 1).toString(36).substring(5);
  props = ['size', 'color']
  contentStyle = '';
  colorStyle = '';
  size = ''
  color = ''
  constructor() {
    super()
    this._initElement()
    const shadowRoot = this.attachShadow({mode: 'closed'});
    shadowRoot.innerHTML = `<svg style="${this.contentStyle}" width="128" height="128" viewBox="0 0 128 128" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M48.7744 45.1574C48.7744 42.5075 50.9225 40.3594 53.5724 40.3594H80.4412C83.091 40.3594 85.2392 42.5075 85.2392 45.1574V80.4411C85.2392 83.0909 83.091 85.2391 80.4412 85.2391H53.5724C50.9225 85.2391 48.7744 83.0909 48.7744 80.4411V45.1574Z" fill="#DBC8F9"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M80.4408 44.1978H45.1571C44.6271 44.1978 44.1975 44.6274 44.1975 45.1574V80.4411C44.1975 80.9711 44.6272 81.4007 45.1571 81.4007H80.4408C80.9708 81.4007 81.4004 80.9711 81.4004 80.4411V45.1574C81.4004 44.6274 80.9708 44.1978 80.4408 44.1978ZM45.1571 40.3594C42.5073 40.3594 40.3591 42.5075 40.3591 45.1574V80.4411C40.3591 83.0909 42.5073 85.2391 45.1571 85.2391H80.4408C83.0907 85.2391 85.2388 83.0909 85.2388 80.4411V45.1574C85.2388 42.5075 83.0907 40.3594 80.4408 40.3594H45.1571Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M91.6597 32.9771H33.9362C33.4062 32.9771 32.9766 33.4067 32.9766 33.9367V91.6602C32.9766 92.1902 33.4062 92.6198 33.9362 92.6198H91.6597C92.1897 92.6198 92.6193 92.1902 92.6193 91.6602V33.9367C92.6193 33.4067 92.1897 32.9771 91.6597 32.9771ZM33.9362 29.1387C31.2863 29.1387 29.1382 31.2868 29.1382 33.9367V91.6602C29.1382 94.3101 31.2863 96.4582 33.9362 96.4582H91.6597C94.3096 96.4582 96.4577 94.3101 96.4577 91.6602V33.9367C96.4577 31.2868 94.3096 29.1387 91.6597 29.1387H33.9362Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M63.7299 48.4987C64.6565 49.0135 64.9903 50.1819 64.4755 51.1084L59.0471 60.8796H69.8103C70.4903 60.8796 71.1196 61.2394 71.4644 61.8255C71.8093 62.4116 71.8182 63.1364 71.488 63.7308L64.4755 76.3533C63.9608 77.2798 62.7924 77.6136 61.8658 77.0989C60.9393 76.5841 60.6054 75.4157 61.1202 74.4892L66.5486 64.718H55.7854C55.1054 64.718 54.4762 64.3582 54.1313 63.7721C53.7865 63.186 53.7775 62.4612 54.1077 61.8668L61.1202 49.2443C61.6349 48.3178 62.8033 47.9839 63.7299 48.4987Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M16 45.969C16 44.9091 16.8593 44.0498 17.9192 44.0498H30.5416C31.6016 44.0498 32.4608 44.9091 32.4608 45.969C32.4608 47.0289 31.6016 47.8882 30.5416 47.8882H17.9192C16.8593 47.8882 16 47.0289 16 45.969Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M16 62.7991C16 61.7391 16.8593 60.8799 17.9192 60.8799H30.5416C31.6016 60.8799 32.4608 61.7391 32.4608 62.7991C32.4608 63.859 31.6016 64.7183 30.5416 64.7183H17.9192C16.8593 64.7183 16 63.859 16 62.7991Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M16 79.6292C16 78.5692 16.8593 77.71 17.9192 77.71H30.5416C31.6016 77.71 32.4608 78.5692 32.4608 79.6292C32.4608 80.6891 31.6016 81.5484 30.5416 81.5484H17.9192C16.8593 81.5484 16 80.6891 16 79.6292Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M94.5391 45.969C94.5391 44.9091 95.3983 44.0498 96.4583 44.0498H109.081C110.141 44.0498 111 44.9091 111 45.969C111 47.0289 110.141 47.8882 109.081 47.8882H96.4583C95.3983 47.8882 94.5391 47.0289 94.5391 45.969Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M94.5391 62.7991C94.5391 61.7391 95.3983 60.8799 96.4583 60.8799H109.081C110.141 60.8799 111 61.7391 111 62.7991C111 63.859 110.141 64.7183 109.081 64.7183H96.4583C95.3983 64.7183 94.5391 63.859 94.5391 62.7991Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M94.5391 79.6292C94.5391 78.5692 95.3983 77.71 96.4583 77.71H109.081C110.141 77.71 111 78.5692 111 79.6292C111 80.6891 110.141 81.5484 109.081 81.5484H96.4583C95.3983 81.5484 94.5391 80.6891 94.5391 79.6292Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M79.6277 94.5391C80.6876 94.5391 81.5469 95.3983 81.5469 96.4583L81.5469 109.081C81.5469 110.141 80.6876 111 79.6277 111C78.5677 111 77.7085 110.141 77.7085 109.081L77.7085 96.4583C77.7085 95.3983 78.5677 94.5391 79.6277 94.5391Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M62.7991 94.5391C63.859 94.5391 64.7183 95.3983 64.7183 96.4583L64.7183 109.081C64.7183 110.141 63.859 111 62.7991 111C61.7391 111 60.8799 110.141 60.8799 109.081L60.8799 96.4583C60.8799 95.3983 61.7391 94.5391 62.7991 94.5391Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M45.9687 94.5391C47.0287 94.5391 47.8879 95.3983 47.8879 96.4583L47.8879 109.081C47.8879 110.141 47.0287 111 45.9687 111C44.9088 111 44.0495 110.141 44.0495 109.081L44.0495 96.4583C44.0495 95.3983 44.9088 94.5391 45.9687 94.5391Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M79.6277 16C80.6876 16 81.5469 16.8593 81.5469 17.9192L81.5469 30.5416C81.5469 31.6016 80.6876 32.4608 79.6277 32.4608C78.5677 32.4608 77.7085 31.6016 77.7085 30.5416L77.7085 17.9192C77.7085 16.8593 78.5677 16 79.6277 16Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M62.7991 16C63.859 16 64.7183 16.8593 64.7183 17.9192L64.7183 30.5416C64.7183 31.6016 63.859 32.4608 62.7991 32.4608C61.7391 32.4608 60.8799 31.6016 60.8799 30.5416L60.8799 17.9192C60.8799 16.8593 61.7391 16 62.7991 16Z" fill="#3D00C3"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M45.9687 16C47.0287 16 47.8879 16.8593 47.8879 17.9192L47.8879 30.5416C47.8879 31.6016 47.0287 32.4608 45.9687 32.4608C44.9088 32.4608 44.0495 31.6016 44.0495 30.5416L44.0495 17.9192C44.0495 16.8593 44.9088 16 45.9687 16Z" fill="#3D00C3"/>
</svg>
`
  }

  attributeChangedCallback(name: string, _: string, newValue: string) {
    this._setState();
  }

  connectedCallback() {
    this._setState();
  }
  
  disconnectedCallback() {
    this._setState();
  }

  _initElement() {
    this._setState()
    const size = this.size || 24
    let contentStyle = `object-fit: content; width: ${size}; height: ${size}`
    this.contentStyle = contentStyle
    if (this.color) this.colorStyle = `fill: ${this.color}`
  }

  _setState() {
    // @ts-ignore
    this.props.forEach(key => this[key as keyof typeof AiPowered] = this.getAttribute(key));
  }
}
export default AiPowered