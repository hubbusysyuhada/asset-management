class NotificationsAlert extends HTMLElement {
  id = "talentics-icon-" + (Math.random() + 1).toString(36).substring(5);
  props = ['size', 'color']
  contentStyle = '';
  colorStyle = '';
  size = ''
  color = ''
  constructor() {
    super()
    this._initElement()
    const shadowRoot = this.attachShadow({mode: 'closed'});
    shadowRoot.innerHTML = `<svg style="${this.contentStyle}" width="24" height="24" viewBox="0 0 24 24"  xmlns="http://www.w3.org/2000/svg">
<path style="${this.colorStyle}"  fill-rule="evenodd" clip-rule="evenodd" d="M9.29616 4.72727V5.25342C6.60635 6.35644 4.72711 9.97935 4.7953 13.1192L4.79528 14.8631C3.41832 16.6333 3.49934 19.2727 6.93469 19.2727H9.29616C9.29616 19.996 9.57803 20.6897 10.0798 21.2012C10.5815 21.7127 11.262 22 11.9716 22C12.6812 22 13.3617 21.7127 13.8634 21.2012C14.3652 20.6897 14.647 19.996 14.647 19.2727H17.015C20.4438 19.2727 20.4935 16.6278 19.1167 14.8576L19.155 13.1216C19.2243 9.97811 17.3414 6.35194 14.647 5.25049V4.72727C14.647 4.00395 14.3652 3.31026 13.8634 2.7988C13.3617 2.28734 12.6812 2 11.9716 2C11.262 2 10.5815 2.28734 10.0798 2.7988C9.57803 3.31026 9.29616 4.00395 9.29616 4.72727ZM12.8634 4.72727C12.8634 4.72727 12.8629 4.76414 12.8618 4.78246C12.5713 4.74603 12.2754 4.72727 11.9752 4.72727C11.6725 4.72727 11.3742 4.74634 11.0815 4.78335C11.0804 4.76474 11.0798 4.74603 11.0798 4.72727C11.0798 4.48617 11.1737 4.25494 11.341 4.08445C11.5082 3.91396 11.7351 3.81818 11.9716 3.81818C12.2081 3.81818 12.435 3.91396 12.6022 4.08445C12.7694 4.25494 12.8634 4.48617 12.8634 4.72727ZM11.0798 19.2727C11.0798 19.5138 11.1737 19.7451 11.341 19.9156C11.5082 20.086 11.7351 20.1818 11.9716 20.1818C12.2081 20.1818 12.435 20.086 12.6022 19.9156C12.7694 19.7451 12.8634 19.5138 12.8634 19.2727H11.0798ZM17.015 17.4545C17.7769 17.4545 18.1879 16.5435 17.6921 15.9538C17.4512 15.6673 17.3228 15.3028 17.3311 14.9286L17.3718 13.0808C17.4399 9.99416 15.0039 6.54545 11.9752 6.54545C8.94717 6.54545 6.51147 9.99301 6.5785 13.0789L6.61867 14.9289C6.6268 15.303 6.49844 15.6674 6.25758 15.9538C5.76173 16.5435 6.17277 17.4545 6.93469 17.4545H17.015ZM16.9794 3.20202C17.2941 2.74813 17.9171 2.63524 18.371 2.94988C19.5187 3.74546 20.8951 5.65348 21.6466 7.9126C21.8209 8.43664 21.5374 9.00279 21.0134 9.17712C20.4893 9.35145 19.9232 9.06795 19.7489 8.5439C19.0887 6.55949 17.9216 5.07189 17.2316 4.59358C16.7777 4.27894 16.6648 3.65592 16.9794 3.20202ZM6.56897 4.59358C7.02287 4.27894 7.13576 3.65592 6.82112 3.20202C6.50648 2.74813 5.88346 2.63524 5.42957 2.94988C4.28187 3.74546 2.90546 5.65348 2.15394 7.91259C1.9796 8.43664 2.26311 9.00279 2.78716 9.17712C3.3112 9.35145 3.87735 9.06795 4.05168 8.5439C4.71182 6.55949 5.87896 5.07189 6.56897 4.59358Z" />
</svg>
`
  }

  attributeChangedCallback(name: string, _: string, newValue: string) {
    this._setState();
  }

  connectedCallback() {
    this._setState();
  }
  
  disconnectedCallback() {
    this._setState();
  }

  _initElement() {
    this._setState()
    const size = this.size || 24
    let contentStyle = `object-fit: content; width: ${size}; height: ${size}`
    this.contentStyle = contentStyle
    if (this.color) this.colorStyle = `fill: ${this.color}`
  }

  _setState() {
    // @ts-ignore
    this.props.forEach(key => this[key as keyof typeof NotificationsAlert] = this.getAttribute(key));
  }
}
export default NotificationsAlert